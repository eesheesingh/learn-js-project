**Loops & Functions:-**
We use loops to perform repeated actions

1. For Loop:-
Applied Code (basic syntax - For Loop)
let i; 
    for (i=0; i<10; i++){
        console.log(i)
    }
- i=0 is a statement 1, i<10 is a statement 2, i++ is a statement 3
- statement 1 (initialising state) only executes once in for loop i.e. i = 0;
- statment 2 (condition state) is a condition base on which the loop is going to run i.e. i<10
- statment 3 only executes when a loop body is executed i.e. i++
- basically if 1st statment runs only once, after wards the conditional statment runs where the loop sytarts and runs everytime 
until the condition statment is false, meaning since i = 1 is less than 10, the return is going to be true and the i will 
print, until the i is either 10 or greater than 10, then if the return is false, the printing will stop

Q1. Code out the add first n as natural numbers in For Loop -  This is how For Loop works
let sum = 0;
let n =  prompt("Enter How many times you want the loop to run")
for(let i=0; i<n; i++){
sum += (i+1)
console.log("Your loop is going to run " + n + " times in which each loop is going to be added as " + sum)
}
console.log("Sum of first " + n + " natural number is" + sum)

2. For In Loop:-
- For In Loops help in working with Arrays
Applied Code (basic syntax - For In Loop)
let obj = {
    eeesh: 90,
    tushar: 75,
    paridhi: 99,
    manav: 60,
}
//keys are 90, 75, 99 and so on ....

for (let a in obj) {
    console.log(a + " Your Marks are " + obj[a])
}

2. For Of Loop:-
for (value of object){
    //code to be executed
}
- Loops throught the values of an object

let obj = {
    eeesh: 90,
    tushar: 75,
    paridhi: 99,
    manav: 60,
}
//values are eeesh, tushar, paridhi and so on...
for (let a of obj) {
    console.log(a)
}
-make sure the values are in strings format. only then the values will loop or iterate


**WHILE LOOP*
- a loop functionality where it works on the basis of conditions 
Suppose Code Applied:-
let n = 3;
let i = 0
while(i < n){
    console.log(i);
    i++
}


**Functions in JS*
- A JS Function is a block of code designed to perform a particular task


**Loops and Function Questions**
q1.Write a program to print a marks of a student in an Object using For Loop
let objMarks = {
    eeshee: 90;
    tushar: 56;
    paridhi: 87;
    man: 73;
}

for (let i=0; i<Object.keys(marks).length; i++){
//Object.keys(objMarks) - this makes sure to give the keys in array
console.log("Marks of ": Object.keys(objMarks)[i] + " are" + objMarks[Object.keys(objMarks)[i]])
}

Q2. Write a program to print "Try Again" until the user enters a correct number using while loop
eg: corrNum= 43

let corrNum = 43;
let  i;
while (i!=corrNum){
    i = prompt("Enter the corrNum: ")
    console.log("Try Again")
}
console.log("You Guessed It Right");

Q3: Write function to find mean of 5 numbers


**String Methods:-**
.length -  counts the no. of strings

.ToUpperCase() and .ToLowerCase()
what is indexing in strings?

.slice() 
- it takes arguments and using index to work 
- the suppose the arguments are .slice(2,4), then index of a string will start from 2nd index of the string upto 3rd index of the string but wont include the 4th index as per arguments.
- suppose you dont give 2nd arguments . slice(2), then you will get the printing of the string doesnt include the index 0 to 1 and will print the rest of strings

.replace()
-  used for replacing a string
- takes argument where 1st argument is going to be what you want to replace and 2nd argument is going to be what are you going to replace it with. eg: .replace("eeshee", "eeshsh")

.trim() - return a new string with no space (removes all the spaces).

Applied Code
let name = "eeshee"
console.log(name)
console.log(name.toUpperCase())
console.log(name.slice(1,4))
console.log(name.slice(2))
console.log(name.replace("sh", "pl"))

Applied Code
let arr = ["a", "c", "rr", "d", "e"]
console.log(arr[2])
console.log("The total length of strings in arr:"+ arr.length)


**Arrays:-**
Arrays: Arrays are variables that hold lots of values

how to print an array value using index
Suppose let a = ["e", "b", "c", "a"] using [1] or [2] or [0] as -> console.log(a[3])

In Javascript Array is returned to be an "object", you can check using typeof()


**Arrays Methods:-**
toString() - This methods converts the array into the string

join() -  adds new element in the array of every object.
- Suppose you want to add "yo" in a string of object in the array, then You will be added in all of the strings